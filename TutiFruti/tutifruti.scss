@charset "UTF-8";

@import "ljubenovic-toolkit";
@import "palette";
@import "fa/scss/font-awesome.scss";

@mixin icon($name) {
  &::before {
    font-family: FontAwesome;
    content: $name;
  }
}

$sqrt3: 1.73205080757;
$sqrt2: 1.41421356237;

body {
  margin: 0;
  padding: 0;
  height: 100vh;
  width: 100vw;
  font-family: Roboto, Arial, sans-serif;
}

.board-container {
  width: 70%;
  height: 100vh;
  float: left;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;

  .board {
    min-width: 1px;
    min-height: 1px;
    background-color: black;
    position: relative;

    $sizes: (
            xxs: 26px,
            xs: 36px,
            s: 42px,
            m: 48px,
            l: 56px,
            xl: 64px,
            xxl: 72px
    );

    @at-root .field {
        $s: 26px;
        $border: 1px;
        margin: 0;
        //box-shadow: 0 0 0 1px mix(black, white, 20%);
        background-color: transparent;
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;

        span {
          display: none;
          font-size: .8em;
          color: rgba(black, .72);
          z-index: 2;
        }

        span.display-coordinates {
          display: none;
        }

        @each $name, $s in $sizes {
          &.rectangle.size-#{$name} {
            width: $s;
            height: $s;
            box-shadow: 0 0 0 1px mix(black, white, 20%);

            .piece {
              width: 0.9 * $s;
              height: 0.9 * $s;
              font-size: 0.9 * $s;
              line-height: 0.9 * $s;
            }
          }
        }

        @each $name, $s  in $sizes {
          &%hexagon {
            position: absolute;
            box-sizing: border-box;

            &::before,
            &::after {
              content: "";
              position: absolute;
              z-index: 1;
              background-color: inherit;
              box-sizing: border-box;
            }
          }

          &.hexagon-pointy.size-#{$name} {
            @extend %hexagon;
            width: $s;
            height: $s / $sqrt3;
            border-left: solid $border mix(black, white, 20%);
            border-right: solid $border mix(black, white, 20%);

            &::before,  &::after {
              width: $s / $sqrt2;
              height: $s / $sqrt2;
              transform: scaleY(0.5774) rotate(-45deg);
              left: ($s - ($s / $sqrt2)) / 2 - $border + 1px;
            }

            &::before {
              top: - ($s / $sqrt2)/2;
              border-top:
                      solid
                      $border * $sqrt2
                      mix(black, white, 20%);
              border-right:
                      solid
                      $border * $sqrt2
                      mix(black, white, 20%);
            }

            &::after {
              bottom: - ($s / $sqrt2)/2;
              border-bottom:
                      solid
                      $border * $sqrt2
                      mix(black, white, 20%);
              border-left:
                      solid
                      $border * $sqrt2
                      mix(black, white, 20%);
            }

            .piece {
              width: $s;
              height: $s;
              line-height: $s;
              top: -$s / 4 / $sqrt3;
              font-size: $s * 0.66!important;
            }

            &.circle-style {
              margin-top: -($s / $sqrt2) / 2 / $sqrt3;
            }
          }

          &.hexagon-flat.size-#{$name} {
            @extend %hexagon;
            width: $s / $sqrt3;
            height: $s;
            border-top: solid $border mix(black, white, 20%);
            border-bottom: solid $border mix(black, white, 20%);

            &::before, &::after {
              width: $s / $sqrt2;
              height: $s / $sqrt2;
              transform: scaleX(0.5774) rotate(45deg);
              top: ($s - ($s / $sqrt2)) / 2 - $border + 0px; // madjije
            }

            &::before {
              left: - ($s / $sqrt2) / 2;
              border-bottom:
                      solid
                      $border * $sqrt2
                      mix(black, white, 20%);
              border-left:
                      solid
                      $border * $sqrt2
                      mix(black, white, 20%);
            }

            &::after {
              right: - ($s / $sqrt2) / 2;
              border-top:
                      solid
                      $border * $sqrt2
                      mix(black, white, 20%);
              border-right:
                      solid
                      $border * $sqrt2
                      mix(black, white, 20%);
            }

            .piece {
              //left: - $s / 4 / $sqrt3;
              font-size: $s * 0.66!important;
            }
          }
        }

        @each $name, $s in $sizes {
          &.circle-style.size-#{$name} {
            box-shadow: 0 0 0 1px rgba(black, .2) inset;
            background-color: palette($blue-grey, 50);
            border-radius: 50%;
            width: $s;
            height: $s;
            transform: scale(0.9);
            top: 0;
            left: 0;

            &::before, &::after {
              display: none;
            }

            .piece {
              position: static;
            }
          }
        }

        &.chess-white {
          background-color: palette($blue-grey, 50);
        }

        &.chess-middle {
          background-color: palette($blue-grey, 200);
        }

        &.chess-black {
          background-color: palette($blue-grey, 400);
        }

        &.go-style--corner-t-l,
        &.go-style--corner-t-r,
        &.go-style--corner-b-l,
        &.go-style--corner-b-r,
        &.go-style--edge-t,
        &.go-style--edge-b,
        &.go-style--edge-l,
        &.go-style--edge-r,
        &.go-style--middle {
          box-shadow: none !important;

          .piece {
            /*left: .0 * $s;
            top: .0 * $s;
            width: 1 * $s;
            height: 1 * $s;
            font-size: 1 * $s;*/
          }
        }

        &.go-style--middle,
        &.go-style--corner-b-r,
        &.go-style--edge-r,
        &.go-style--edge-b {
          &::before {
            z-index: 1;
            content: "";
            width: 100%;
            height: 100%;
            top: - 50%;
            left: - 50%;
            position: absolute;
            box-shadow: 0 0 0 1px mix(black, white, 20%);
          }
        }

        .piece {
          z-index: 5;
          //width: $s * .9;
          //height: $s * .9;
          position: absolute;
          left: $s * 0.05;
          top: $s * 0.05;
          //font-size: $s * .9;
          //line-height: $s * .9;
          text-align: center;
          text-shadow: 0 0 2px rgba(black, .4);
        }

        @at-root .piece {

          // Colors

          $colors: (
                  red: $red,
                  pink: $pink,
                  purple: $purple,
                  deep-purple: $deep-purple,
                  indigo: $indigo,
                  blue: $blue,
                  light-blue: $light-blue,
                  cyan: $cyan,
                  teal: $teal,
                  green: $green,
                  light-green: $light-green,
                  lime: $lime,
                  yellow: $yellow,
                  amber: $amber,
                  orange: $orange,
                  deep-orange: $deep-orange,
                  brown: $brown,
                  grey: $grey,
                  blue-grey: $blue-grey,
          );

          @each $key, $value in $colors {
            &.color--#{$key} {
              color: palette($value);
            }
          }

          &.color--black {
            color: black;
          }

          &.color--white {
            color: white;
            text-shadow: 0 1px 3px rgba(black, .8);
          }

          // Shapes

          $shapes-icons: (
            // osnovne
                  circle: $fa-var-circle, // krug
                  circle-outline: $fa-var-circle-o,
                  square: $fa-var-square, // kvadrat
                  square-outline: $fa-var-square-o,
                  star: $fa-var-star,     // zvezda
                  X: $fa-var-times,       // iks
                  O: $fa-var-circle-o,    // oks
            // strelice
                  arrow-left: $fa-var-arrow-left,
                  arrow-right: $fa-var-arrow-right,
                  arrow-up: $fa-var-arrow-up,
                  arrow-down: $fa-var-arrow-down,
                  angle-left: $fa-var-angle-left,
                  angle-right: $fa-var-angle-right,
                  angle-up: $fa-var-angle-up,
                  angle-down: $fa-var-angle-down,
                  angle-double-left: $fa-var-angle-double-left,
                  angle-double-right: $fa-var-angle-double-right,
                  angle-double-up: $fa-var-angle-double-up,
                  angle-double-down: $fa-var-angle-double-down,
            // uglavnom za markings, mada moze i kao shape:
                  crosshairs: $fa-var-crosshairs,
                  bullseye: $fa-var-bullseye,
                  check: $fa-var-check,
                  check-circle: $fa-var-check-circle,
                  minus: $fa-var-minus,
                  plus: $fa-var-plus,
          );

          @each $key, $value in $shapes-icons {
            &.shape--#{$key} {
              @include icon($value);
            }
          }

          $shapes-unicode: (
                  bullet: "â€¢",
            // znaci sa karata (suites)
                  suit-spade-fill: "\2660",
                  suit-spade-outline: "\2664",
                  suit-heart-fill: "\2665",
                  suit-heart-outline: "\2661",
                  suit-diamond-fill: "\2666",
                  suit-diamond-outline: "\2662",
                  suit-club-fill: "\2663",
                  suit-club-outline: "\2667",
          );

          @each $key, $value in $shapes-unicode {
            &.shape--#{$key}::before {
              content: $value;
            }
          }

          // Brojke
          @for $i from 1 through 99 {
            &.shape--number-#{$i}::before {
              content: "#{$i}";
            }
          }

          // Slova
          @each $i in A B C D E F G H I J K L M N O P Q R S T U V W X Y Z {
            &.shape--letter-#{$i}::before {
              content: "#{$i}";
            }
          }

          // Chess-specific shapes

          &%chess {
            /*text-shadow: 0 0 3px rgba(black, .5);*/
          }

          $shapes-chess: (
                  king-white: "\2654",
                  king-black: "\265A",
                  queen-white: "\2655",
                  queen-black: "\265B",
                  rook-white: "\2656",
                  rook-black: "\265C",
                  bishop-white: "\2657",
                  bishop-black: "\265D",
                  knight-white: "\2658",
                  knight-black: "\265E",
                  pawn-white: "\2659",
                  pawn-black: "\265F",
          );

          @each $key, $value in $shapes-chess {
            &.shape--chess-#{$key} {
              @extend %chess;
              &::before {
                content: $value;
              }
            }
          }

          // Shogi-specific shapes

          &.shape--shogi-king-black.color--black {
            &::before {
              content: "\2617";
              font-size: $s;
            }
            &::after {
              position: absolute;
              left: 0;
              top: 3px;
              content: "çŽ‰";
              height: $s - 12px;
              width: $s - 12px;
              font-size: $s * .4;
              line-height: $s - 12px;
              text-align: center;
              color: white;
            }
          }

        }

        .marking {
          @extend .piece;
          opacity: .75;
          transform: scale(.6);
        }

      }

    .axis-field {
      color: rgba(black, .5);
      position: absolute;
      display: flex;
      justify-content: center;
      align-items: center;
    }

  }
}

.info {
  float: left;
  height: 100vh;
  width: 30%;
  @include z-depth(2);
  display: flex;
  flex-direction: column;
  background-color: palette($blue-grey, 50);
  color: rgba(black, .86);

  .player {
    height: 50%;
    width: 100%;
    display: flex;
    flex-direction: column;

    .name {
      font-size: 2em;
      text-align: center;
      padding: 1em;
      font-weight: bold;
    }

    .message {
      background-color: palette($blue-grey, 900);
      color: rgba(white, .84);
      margin: 1em;
      padding: 1em;
      border-radius: .33em;
      @include z-depth(1);
      position: relative;
      text-align: right;

      &.show {
        visibility: hidden;
      }

      &::before {
        background-color: palette($blue-grey, 900);
        content: " ";
        display: block;
        height: 20px;
        position: absolute;
        top: -6px;
        left: calc(50% - 12.5px);
        transform: rotate(63deg) skew(36deg) scale(.6);
        width: 25px;
        box-shadow:
                -3px -2.5px 4px 1px
                rgba(black, .1);
      }
    }
  }

  .player1 .message {
    margin-top: 0;
  }

  .player2 .message {
    margin-bottom: 0;
  }

  .player2 {
    flex-direction: column-reverse;

    .message {

      &::before {
        transform:
                rotate(180deg + 63deg)
                skew(36deg)
                scale(.6);
        top: auto;
        bottom: -6px;
      }
    }
  }

  .removed {
    padding: 1em;
    display: flex;
    flex-direction: row-reverse;

    .piece-removed {
      position: static;
      $r-s: 48px;
      width: $r-s;
      height: $r-s;
      font-size: $r-s;
      line-height: $r-s;
    }
  }
}

.fab {
  display: none;
  position: fixed;
  bottom: 12px;
  right: 12px;
  background-color: palette($green);
  border-radius: 50%;
  width: 64px;
  height: 64px;
  line-height: 64px;
  text-align: center;
  font-size: 24px;
  color: rgba(white, .86);
  @include z-depth(1);
}

.settings {
  display: none;
  position: fixed;
}

#message {
  position: fixed;
  bottom: -100px;
  background-color: rgba(black, .6);
  border-radius: 10px;
  @include z-depth(.5);
  color: rgba(white, .86);
  left: calc(50% - #{25vw});
  width: 50vw;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  font-family: Consolas, monospace;
  font-weight: bold;
  padding: 1em 2em;
  z-index: 10;
}
