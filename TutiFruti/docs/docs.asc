= *TutiFruti* v1.0 -- Struktura objekta
:author: Lazar Ljubenović, Marija Đorđević
:email: lazar.ljubenovic.1995@gmail.com
:toc:
:toclevels: 2
:toc: left
:toc-title: Sadržaj
:sectlinks:
:stylesheet: docs.css
:linkcss:
:icons: font
:source-highlighter: highlightjs
:highlightjs-theme: monokai

Objekat koji služi za prikaz stanja igre podeljen je u šest celina koje sadrže:

- informacije o tipu table na kojoj se igra igra (`board`),
- informacije o igraču (`player`),
- informacije o trenutnom stanju table (`state`) i
- dodatne informacije o obeležavanju pojedinih polja table (`markings`),
- informacije o figurama koje su "izbačene" sa table, ako takve postoje (`removed`),
- podaci o tabli čitljivi mašinama koji se ignorišu (`report`).

Dokumentaciju prate primeri koji su progresivno sve komplikovaniji, kako bi olakšali razumevanje specifikacije.








== Grupa `board`

Podobjekat `board` u sebi sadrži osnovne informacije o tipu, veličini i izgledu table.
Ovaj objekat u skoro svim igrama ostaje nepromenjen tokom trajanja partije.
Sadrži svojstva `type`, `dimensions`, `corner`, `axis`, `coloring`, `mode` i `size`.

[CAUTION]
====
Većina (verovatno sve) igre na tabli imaju fiksiranu tablu (dimenzije, oblik, boja polja, itd), koja se tokom partije ne menja.

Kako TutiFruti svaki put iznova iscrtava celu tablu (a ne samo njeno stanje), trebalo bi da *oba igrača imaju podešene iste parametre*.
Inače će se pri svakom novom potezu tabla predstaviti na drugačiji način, što verovatno nije ono što se očekuje.

Ovo bi trebalo da profesor definiše u opisu projekta koji se realizuje.
====



=== Svojstvo `type`

==== Podržane vrednosti

Stringovi `rectangular`, `hexagonal-flat`, `hexagonal-pointy`.

==== Podrazumevana vrednost

String `rectangular`.

==== Opis

Definiše osnovni izgled table i polja na njoj.

- Kada se podesi na `rectangular`, polja su *kvadratnog* oblika, a cela tabla ima oblik pravougaonika. 
- Kada se podesi na `hexagonal-flat`, polja su oblika pravilnih *šestouglova* (kod kojih je sa gornje strane teme), a cela tabla ima oblik šestougla kod kojeg je sa gornje strane stranica.
- Kada se podesi na `hexagonal-pointy`, polja su oblika pravilnih *šestouglova* (kod kojih je sa gornje strane stranica), a cela tabla ima oblik šestougla kod kojeg je sa gornje strane teme.

Utiče na moguće vrednosti svojstava `dimensions`, `corner`, `coloring` i `mode`.

==== Primer

Sledeći JSON definiše *pravougaonu* tablu.

[source]
----
{
    "board": {
        "type": "rectangular"
    }
}
----




=== Svojstvo `dimensions`

==== Podržane vrednosti

Niz od dva ili tri nenegativna cela broja.

- Ukoliko `type` ima vrednost `rectangular`, `dimensions` mora da ima dva elementa.
- Ukoliko `type` ima vrednost `hexagonal-flat` ili `hexagonal-pointy`, `dimensions` mora da ima tri elementa.

Mada ne postoji tehničko ograničene po pitanju maksimalne dozvoljene veličine, ne preporučuje se unošenje dimenzija preko `20` za niz od dva elemenata, odnosno `10` za niz od tri elemenata.

==== Podrazumevana vrednost

`[8, 8]` ili `[6, 6, 6]`, u zavisnosti od vrednosti svojstva `type`.

==== Opis

Ukoliko `type` ima vrednost `rectangular`:

- Prvi element niza se odnosi na broj vrsta u tabli (drugim rečima, predstavlja njenu visinu izraženu u broju polja).
- Drugi element niza se odnosi na broj kolona u tabeli (drugim rečima, predstavlja njenu dužinu izraženu u broju polja).

Ukoliko `type` ima vrednost `hexagonal-flat`:

- Prvi element niza predstavlja broj polja koji se pružaju duž *gornje leve* i *donje desne* ivice table.
- Drugi element niza predstavlja broj polja koji se pružaju duž *gornje* i *donje* ivice table.
- Treći element niza predstavlja broj polja koji se pružaju duž *gornje desne* i *donje leve* ivice table.

Ukoliko `type` ima vrednost `hexagonal-pointy`:

- Prvi element niza predstavlja broj polja koji se pružaju duž *gornje leve* i *donje desne* ivice table.
- Drugi element niza predstavlja broj polja koji se pružaju duž *gornje desne* i *donje leve* ivice table.
- Treći element niza predstavlja broj polja koji se pružaju duž *leve* i *desne* ivice table.

==== Primer

Sledeći JSON definiše pravougaonu tablu koja ima *4* reda i *6* kolona (ima "visinu" 4 i "širinu" 6).

[source]
----
{
    "board": {
        "type": "rectangular",
        "dimensions": [4, 6]
    }
}
----

Sledeći JSON definiše šestougaonu tablu prikazanu na slici. TODO

[source]
----
{
    "board": {
        "type": "hexagonal-flat",
        "dimensions": [2, 3, 4]
    }
}
----

Sledeći JSON definiše šestougaonu tablu prikazanu na slici. TODO

[source]
----
{
    "board": {
        "type": "hexagonal-pointy",
        "dimensions": [2, 3, 4]
    }
}
----




=== Svojstvo `corner`

==== Podržane vrednosti

Osnovne vrednosti koje su uvek podržane su `bottom-left`, `top-left`, `top-right` i `bottom-right`.
Ukoliko `type` ima vrednost `rectangular`, podržane vrednosti su samo osnovne vrednosti.
Ukoliko `type` ima vrednost `hexagonal-flat`, pored osnovnih, podržane su i vrednosti `left` i `right`.
Ukoliko `type` ima vrednost `hexagonal-pointy`, pored osnovnih, podržane su i vrednosti `top` i `bottom`.

==== Podrazumevana vrednost 

String `bottom-left` (nezavisno od vrednosti svojstva `type`).

==== Opis

Daje informaciju o tome iz kog ugla počinje označavanje polja tabele (same oznake se određuju na osnovu svojstva `axis`).

TODO slika.




=== Svojstvo `axis`

==== Podržane vrednosti

Niz od dva stringa.
Stringovi predstavljaju oznake koje će se koristiti pri označavanju polja tabele, pri čemu je svaka oznaka odvojena blanko znakom.
Broj ovih oznaka mora biti u skladu sa dimenzijama datim u `dimensions` i vrstom table datom u `type`.
Ukoliko je `type` podešeno na `hexagonal-flat` ili `hexagonal-pointy`, u obzir se uzima i vrednost svosjtva `corner`.

==== Podrazumevana vrednost

Elementi niza su `1 2 3 4 ... 25 26` i `A B C D ... Y Z`.

==== Opis

Kada je `type` podešeno na `rectangular`, broj oznaka prvog stringa mora biti isti kao prva dimenzija, a broj oznaka drugog stringa mora biti isti kao druga dimenzija.

Kada je `type` podešeno na `hexagonal-pointy`, broj oznaka prvog stringa mora biti isti kao zbir dveju dimenzija koje se protežu iz tog ugla, pri čemu se prvo gleda smer kazaljke na satu, a zatim smer suprotan kretanu kazaljke na satu. Na primer, ako je svojstvo `corner` podešeno na `bottom-left`, broj oznaka u prvom stringu mora biti jednak `c + a`, a u drugom mora biti jednak `b + a`, pri čemu su `a`, `b` i `c` redom dimenzije date u `dimensions`.

Analogno važi i za slučaj kada je `type` podešeno na `hexagonal-flat`.

Agent prikazuje deskriptivnu grešku ili upozorenje ukoliko uslovi nisu ispunjeni.

[TIP]
====
TutiFruti će prijaviti grešku samo ukoliko je broj prosleđenih oznaka *manji* od zahtevanog.
Međutim, ukoliko je on veći, samo će prijaviti upozorenje.
Zato nije neophodno stalno "tempiranje" ovih vrednosti tokom razvitka agenata, već se one mogu jednostavno postaviti na vrednosti koje sigurno ispunjavaju svaku tablu, npr. `I II III IV V ... XX` ili `a b c d e ... y z`.
====

==== Primer

Sledeći JSON definiše pravougaonu tablu prikazanu na slici. TODO

[source]
----
{
    "board": {
        "type": "rectangular",
        "dimensions": [8, 8],
        "corner": "bottom-left",
        "axis": [
            "1 2 3 4 5 6 7 8",
            "A B C D E F G H"
        ]
    }
}
----




=== Svojstvo `coloring`

==== Podržane vrednosti

Stringovi `classic` i `chess`.

==== Podrazumevana vrednost

String `classic`.

==== Opis

Definiše način bojenja polja.
Ukoliko je podešeno na `classic`, polja će dobiti podrazumevanu boju u skladu s temom aplikacije.
Ukoliko je podešeno na `chess`, a `type` na `rectangular`, polja će naizmenično dobiti crnu i belu boju, kao na šahovskoj tabli.
Ukoliko je podešeno na `chess`, a `type` na `hexagonal-flat` ili `hexagonal-pointy`, polja će dobijati crnu, sivu i belu boju, tako da nijedna dva susedna ne budu obojena istom bojom.





=== Svojstvo `mode`

==== Podržane vrednosti

Stringovi `classic` i `circles`.
Ako je `type` podešeno na `rectangular`, podržana je i vrednost `go`.

==== Podrazumevana vrednost

String `classic`.

==== Opis

Definiše način prikazivanja polja.

Ukoliko je podešeno na `classic`, a `type` na `rectangular`, polja će biti kvadrati.
Ukoliko je podešeno na `classic`, a `type` na `hexagonal-flat` ili `hexagonal-pointy`, polja će biti šestouglovi (odgovarajuće orijentacije).
U oba slučaja će figure biti postavljane u unutrašnjosti kvadrata, odnosno šestouglova.

Ukoliko je podešeno na `circles`, sva polja će biti krugovi.
Figure se postavljaju u unutrašnjosti ovih krugova.

Vrednost `go` je validna samo ako je tip table podešen na `rectangular`.
U tom slučaju se mreža naizgled smanjuje, i ima po jedno polje manje u obe dimenzije, ali je to zapravo samo privid jer se figure smeštaju na preseke linija koje čine tu mrežu.


Sledeći JSON definiše šestougaonu tablu sa šahovskim šarama prikazanu na slici. TODO


==== Primer

Sledeći JSON definiše pravougaonu tablu prikazanu na slici. TODO

[source]
----
{
    "board": {
        "type": "rectangular",
        "dimensions": [8, 8],
        "corner": "bottom-left",
        "axis": [
            "1 2 3 4 5 6 7 8",
            "A B C D E F G H"
        ],
        "coloring": "classic",
        "mode": "classic"
    }
}
----

Sledeći JSON definiše pravougaonu tablu nalik na goban (tabla koja se koristi za kinesku igru go/igo) prikazanu na slici. TODO

[source]
----
{
    "board": {
        "type": "rectangular",
        "dimensions": [8, 8],
        "corner": "bottom-left",
        "axis": [
            "1 2 3 4 5 6 7 8",
            "A B C D E F G H"
        ],
        "coloring": "classic",
        "mode": "go"
    }
}
----

Sledeći JSON definiše pravougaonu tablu sa šahovskim šarama i okruglim poljima prikazanu na slici. TODO

[source]
----
{
    "board": {
        "type": "rectangular",
        "dimensions": [8, 8],
        "corner": "bottom-left",
        "axis": [
            "1 2 3 4 5 6 7 8",
            "A B C D E F G H"
        ],
        "coloring": "chess",
        "mode": "circles"
    }
}
----

Sledeći JSON definiše klasičnu šestougaonu tablu prikazanu na slici. TODO

[source]
----
{
    "board": {
        "type": "hexagonal-flat",
        "dimensions": [5, 5, 5],
        "corner": "bottom-left",
        "axis": [
            "1 2 3 4 5 6 7 8 9",
            "A B C D E F G H I"
        ],
        "coloring": "classic",
        "mode": "circles"
    }
}
----

Sledeći JSON definiše šestougaonu tablu sa šahovskim šarama prikazanu na slici. TODO

[source]
----
{
    "board": {
        "type": "hexagonal-pointy",
        "dimensions": [5, 5, 5],
        "corner": "bottom-left",
        "axis": [
            "1 2 3 4 5 6 7 8 9",
            "A B C D E F G H I"
        ],
        "coloring": "chess",
        "mode": "classic"
    }
}
----



=== Svojstvo `size`

==== Podržane vrednosti

Stringovi `xxs`, `xs`, `s`, `m`, `l`, `xl` i `xxl`.

==== Podrazumevane vrednosti

String `m`.

==== Opis

Govori o fizičkoj veličini polja. 
`xxs` je najmanja, a `xxl` je najveća veličina.










== Grupa `player`

`player` je objekat koji sadrži tri svojstva: `name` (opciono), `order` i `message` (opciono).

=== Svojstvo `name`

==== Podržane vrednosti

Proizvoljan string. Ne preporučuju se vrednosti preko 20 karaktera.

==== Podrazumevana vrednost

`Igrač 1` ili `Igrač 2`, u zavinosti od vrednosti svojstva `order`.

==== Opis

Koristi se da bi se prikazalo ime igrača, tima ili agenta koji stoji iza poteza.




=== Svojstvo `order`

==== Podržane vrednosti

Brojevi `1` ili `2`.

==== Podrazumevana vrednost

Nema.
Program prijavljuje grešku ukoliko dobije objekat koji sadrži nevalidnu vrednost ovog polja.

==== Opis

Koristi se da bi se identifikovao igrač koji šalje prikaz stanja table.




=== Svojstvo `message`

==== Podržane vrednosti

String proizvoljne dužine.

==== Podrzumevana vrednost

Prazan string.


==== Opis

Može se koristiti za bilo koju svrhu.
Služi za komunikaciju između mašine i čoveka.
Može sadržati neke informacije od koristi za debagiranje (npr. odigrani potez), ili šaljive poruke.













== Grupa `state`

`state` je niz objekata kojima se određuju koje se figure trenutno nalaze na tabli, kao i njihove pozicije.
Figure su određene oblikom (`shape`) i bojom (`color`).

Svaki od elemenata niza mora biti objekat sa ključevima `style` i `fields`.

`style` je objekat koji se sastoji od ključeva `color` i `shape`.

`color` je string koji određuje *boju* kojom figura treba da bude obojena.
Podržane su sledeće vrednosti:

 - `red`, `pink`, `purple`, `deep-purple`, `indigo`, `blue`, `light-blue`, `cyan`, `teal`, `green`, `light-green`, `lime`, `yellow`, `amber`, `orange`, `deep-orange`, `brown`, `grey`, `blue-grey`, `black` i `white`.

`shape` je string koji određuje *oblik* kojim figura treba da bude predstavljena.
Podržane su sledeće vrednosti:

- osnovni oblici: `O`, `X`, `circle`, `square`, `star`;
- strelice: `arrow-left`, `arrow-right`, `arrow-up` `arrow-down`, `angle-left`, `angle-right`, `angle-up`, `angle-down`, `angle-double-left`, `angle-double-right`, `angle-double-up`, `angle-double-down`;
- znaci za obeležavanje: `crosshairs`, `bullseye`, `check`, `check-circle`, `minus`, `plus`;
- znaci sa karata: `suit-spade-outline`, `suit-spade-fill`, `suit-heart-fill`, `suit-heart-outline`, `suit-diamond-fill`, `suit-diamond-outline`, `suit-club-fill`, `suit-club-outline`;
- brojevi i slova: `number-1`, `number-2`, ..., `number-99`; `letter-A`, `letter-B`, ..., `letter-Z`; `letter-a`, `letter-b`, ..., `letter-z`;
- skup vrednosti za igranje šaha: `chess-king-outline`, `chess-king-fill`, `chess-queen-outline`, `chess-queen-fill`, `chess-rock-outline`, `chess-rock-fill`, `chess-bishop-outline`, `chess-bishop-fill`, `chess-knight-outline`, `chess-knight-fill`, `chess-pawn-outline`, `chess-pawn-outline`.

TODO slika

`fields` je niz gde svaki element predstavlja koordinate na koje se postavlja figura, čiji su boja i oblik definisani u `style`.
Svaki element ovog niza je novi niz od dva elemenata, gde elementi čine koordinate.
Ove koordiante poštuju konvenciju navedenu u `board.axis` i `board.corner`.

Ukoliko koordinate u `fields` nisu deo definisane table, prikazuje se upozorenje.
Slično, ukoliko dve figure imaju iste koordinate, prikazuje se upozorenje.

TODO slike

=== Primeri

Sledi primer postavke standardne šahovske partije.

[source, json]
----
{
    "board": {
        "type": "rectangular",
        "dimensions": [8, 8],
        "corner": "bottom-left",
        "axis": [
            "1 2 3 4 5 6 7 8",
            "A B C D E F G H"
        ],
        "coloring": "chess",
        "mode": "classic",
        "size": "xxl"
    },
    "player": {
        "name": "Igrač 1",
        "order": 1,
        "message": "TutiFruti je awesome ♥"
    },
    "state": [
        {
            "fields": [
                ["7", "A"], ["7", "B"], ["7", "C"], ["7", "D"],
                ["7", "E"], ["7", "F"], ["7", "G"], ["7", "H"]
            ],
            "style": { "color": "black", "shape": "chess-pawn-fill" }
        },
        {
            "fields": [
                ["2", "A"], ["2", "B"], ["2", "C"], ["2", "D"],
                ["2", "E"], ["2", "F"], ["2", "G"], ["2", "H"]
            ],
            "style": { "color": "white", "shape": "chess-pawn-fill" }
        },
        {
            "fields": [ ["8", "A"], ["8", "H"] ],
            "style": { "color": "black", "shape": "chess-rook-fill" }
        },
        {
            "fields": [ ["8", "B"], ["8", "G"] ],
            "style": { "color": "black", "shape": "chess-knight-fill" }
        },
        {
            "fields": [ ["8", "C"], ["8", "F"] ],
            "style": { "color": "black", "shape": "chess-bishop-fill" }
        },
        {
            "fields": [ ["8", "D"] ],
            "style": { "color": "black", "shape": "chess-queen-fill" }
        },
        {
            "fields": [ ["8", "E"] ],
            "style": { "color": "black", "shape": "chess-king-fill" }
        },
        {
            "fields": [ ["1", "A"], ["1", "H"] ],
            "style": { "color": "white", "shape": "chess-rook-fill" }
        },
        {
            "fields": [ ["1", "B"], ["1", "G"] ],
            "style": { "color": "white", "shape": "chess-knight-fill" }
        },
        {
            "fields": [ ["1", "C"], ["1", "F"] ],
            "style": { "color": "white", "shape": "chess-bishop-fill" }
        },
        {
            "fields": [ ["1", "D"] ],
            "style": { "color": "white", "shape": "chess-queen-fill" }
        },
        {
            "fields": [ ["1", "E"] ],
            "style": { "color": "white", "shape": "chess-king-fill" }
        }
    ]
}
----

Sledi primer polu-odigrane partije igre gomoku na tabli za go.

[source, json]
----
{
    "board": {
        "type": "rectangular", "dimensions": [15, 15], "corner": "bottom-left",
        "axis": [
            "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15",
            "A B C D E F G H I J K L M N O"
        ],
        "coloring": "classic", "mode": "go"
    },
    "player": {
        "name": "La Plávusha", "order": 1, "message": "TutiFruti je awesome ♥"
    },
    "state": [
        {
            "fields": [
                ["13", "C"], ["12", "D"], ["11", "E"], ["11", "F"], ["11", "G"],
                ["11", "H"], ["11", "J"], ["11", "L"], ["12", "M"], ["10", "F"],
                ["10", "G"], ["10", "I"], ["10", "K"], ["9", "F"], ["9", "H"],
                ["9", "J"], ["9", "L"], ["8", "E"], ["8", "F"], ["8", "G"],
                ["8", "H"], ["8", "M"], ["7", "E"], ["7", "H"], ["6", "D"],
                ["6", "E"], ["6", "I"], ["6", "L"], ["5", "E"], ["5", "H"],
                ["5", "K"], ["4", "F"], ["4", "J"], ["3", "D"]
            ],
            "style": { "color": "black", "shape": "circle" }
        },
        {
            "fields": [
                ["14", "B"], ["13", "F"], ["12", "E"], ["12", "F"], ["12", "I"], 
                ["12", "K"], ["12", "N"], ["11", "C"], ["11", "I"], ["10", "H"],
                ["9", "E"], ["9", "G"], ["9", "I"], ["8", "D"], ["8", "I"],
                ["8", "J"], ["8", "K"], ["7", "C"], ["7", "D"], ["7", "F"],
                ["7", "G"], ["7", "I"], ["7", "L"], ["7", "M"], ["7", "N"],
                ["6", "H"], ["5", "F"], ["5", "G"], ["5", "I"], ["5", "J"],
                ["3", "C"], ["3", "I"], ["2", "H"]
            ],
            "style": { "color": "white", "shape": "circle" }
        }
    ]
}
----







== Grupa `markings`

`markings` je niz sličan nizu `state`. 
Služi za obeležavanje nekih polja za posebne namene (npr. poslednje odigrani potez, mogući potezi, itd).

Prikazuju se izbledelom bojom iznad poljā koje je specificirano u `fields`.

[NOTE]
====
Mada TutiFruti to ne brani, savetuje se korišćenje jednostavnih oblika kao što su `circle`, `O` i `square`, kao i izbegavanje korišćenja istih oblika i boja za figure i za oznake, kako bi se izbegla eventualna konfuzija oko toga šta su figure a šta oznake.
====


=== Primeri

Primer šahovske table iz prethodnog odeljka se može dopuniti sledećim `markings` nizom.
Iz primera se vidi mogućnost jedne od mogućnosti upotrebe ovog niza: obeležavanje mogućih poteza figure.

[source, json]
----
"markings": [
    {
        "fields": [ ["4", "D"], ["3", "D"] ],
        "style": { "color": "blue", "shape": "O" }
    }, {
        "fields": [ ["2", "D"] ],
        "style": { "color": "blue", "shape": "circle" }
    }, {
        "fields": [ ["8", "G"] ],
        "style": { "color": "red", "shape": "circle" }
    }, {
        "fields": [ ["6", "F"], ["6", "H"] ],
        "style": { "color": "red", "shape": "O" }
    }
]
----









== Grupa `removed`

`removed` predstavlja figure koje su izbačene sa table.
U pitanju je niz od dva elemenata: prvi element se odnosi na prvog, a drugi na drugog igrača.

Svaki od nizova sadrži objekte sa ključevima `number` i `style`.
`style` prati istu konveciju opisanu ranije.

`number` je broj ponavljanja izbačene figure (nenegativan ceo broj).

=== Primeri

U sledećim primerima, prvi igrač (beli) ima sledeće: izbačenu kraljicu, četiri pešaka i oba topa.
Drugi igrač ima izbačena tri pešaka.

[source, json]
----
"removed": [
        [
            {
                "number": 1,
                "style": { "color": "white", "shape": "chess-knight-fill" }
            },
            {
                "number": 4,
                "style": { "color": "white", "shape": "chess-pawn-fill" }
            },
            {
                "number": 2,
                "style": { "color": "white", "shape": "chess-rook-fill" }
            }
        ],
        [
            {
                "number": 3,
                "style": { "color": "black", "shape": "chess-pawn-fill" }
            }
        ]
    ]
----










== Grupa `report`

`report` je opciona struktura koji služi za pojednostavljeni prikaz table koji je čitljiv mašinama.
Ne utiče na prikaz; TutiFruti ga ignoriše i samo ga prosleđuje među takmičarima.

=== Primer

Sledeći string prikazuje interno stanje u igri Abalone.

[source, json]
----
"report": "xxx-ooxxxooo-xx-oo---------------------------oo-xx-oooxxxoo-xx"
----

U ovom primeru, takmičari su se dogovorili da prvi karakter označava koji igrač treba da odigra potez.
Ovde je to `x` (po konvenciji takmičara, to je crni igrač).
Preostali karakteri označavaju redom polja na tabli (interni dogovor je da `-` označava prazno polje).

Dakle, ovaj string je veb-agentu beskoristan i nigde ne prikazuje na tabli, ali nudi mogućnosti igračima da pored prikaza za GUI razmenjuju i informacije u nekom drugim obliku, koji će njima biti razumljiviji.

U ovom slučaju je jednostavnije proći kroz string i ispuniti stanje table u zavinosti od toga da li je karakter `x`, `o` ili `-`, nego obrađivati listu i ispitivati boje (`black`), oblike (`circle`) i pozicije (`4-C`).











== Kompletni primeri

Slede primeri JSON fajlova sa kratkim opisom i pojašnjenjima.
Primeri se nalaze u folderu link:examples/[`examples`].

[TIP]
====
Svaki primer na početku ima link do JSON fajla.
Klikom na link, fajl se otvara u brauzeru.
Radi lakšeg čitanja JSON fajla, savetujemo korišćenje dodatka koji formatira JSON format. 

Za Google Chrome to može biti, na primer, https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc[*JSONView*]. 
Po instaliranju, desni klik na ikonicu dodatka -> _Manage extensions_ -> dozvoliti opciju _Allow access to file URLs_.
====

Cilj primerā je da razjasni sadržaj objekta, ali i da sugeriše primere upotrebe nekih od svojstava koje objekat može da poseduje.

=== Šah

Primer se nalazi u fajlu link:examples/chess.json[`chess.json`].

Ovo je primer početne pozicije u šahu, sa obeleženim mogućim potezima za belog pešaka s polja *2-D* na *3-D* i *4-D* i crnog konja s polja *8-G* na *6-F* i *H-F*.

Izabrana je *pravougaona* tabla dimenzija *8 × 8*, sa oznakama *1*-*8* i *A*-*H* koje počinju u *donjem levom* uglu table.
Obojena je kao *šahovska* tabla, pri čemu su polja *kvadrati* (`classic`).
Tabla je relativno mala, pa je izabrana *najveća veličina* polja (`xxl`).

Stanje table je poslao *prvi* igrač, sa imenom *La Plávusha* i porukom *TutiFruti je awesome!*.

Zatim sledi niz objekata koji opisuju stanje table.
U ovom primeru, prvi takav objekat je niz crnih (`black`) pešaka (`chess-pawn-fill`), koji se smeštaju na pozicije *7-A*, *7-B*, *7-C*, *7-D*, *7-E*, *7-F*, *7-G* i *7-H*. 

Kako je u pitanju početna pozicija, još uvek nema izbačenih figura, pa je `markings` prazan niz. 

Objekat `report` sadrži string kojim agenti interno parsiraju stanje.
Ovde velika slova predstavljaju crne, a mala -- bele figure. 
Blanko znaci označavaju prelazak u novi red.
Naravno, ovaj string nema uticaja na izgled prikaza i nije morao imati goreopisanu strukturu.

=== Heksa-šah

Primer se nalazi u fajlu link:examples/hexachess.json[`hexachess.json`].

U pitanju je igra slična šahu koja koristi iste figure kao i klasičan šah, ali se igra na šestougaonoj tabli (pri čemu je tabla rotirana tako da šestougao koji se formira ima teme koje pokazuje nagore -- stoga `hexagonal-pointy`, dok su polja table zapravo šestougovi kojima stranica pokazuje nagore) dimenzija *5 × 5 × 6*. 

Pošto je teme u *donjem levom* uglu obeleženo kao početno teme iz koga polaze ose, broj oznaka koje se prisleđuju u `axis` mora da bude odgovarajući.
Počev od donjeg levog ugla, u smeru kazaljke na satu, nailazimo na stranice dužina 6 i 5.
Zato prvi niz oznaka treba da sadrži *6 + 5 - 1 = 10* oznaka, i u ovom primeru su izabrana velika slova abecede.
U smeru suprotnom kretanju kazaljke na satu, nailazimo na stranice dužina 5 i 5. 
Istom logikom, drugi niz treba da ima *9* oznaka, i ovde su to brojevi.

=== Šah u šahu

Primer se nalazi u fajlu link:examples/chesscheck.json[`chesscheck.json`].

Glavna postavka table (`board`) je slična kao ona iz prvog primera.
Nizom `state` je predstavljeno stanje table iz sredine partije šaha.

Niz `markings` je iskorišćen u dve svrhe:

- Pre svega, polje s kog je bela kraljica došla (*3-b*), kao i sva polja do odredišnog, obeležena su zelenim tačkama.
Na odredišnom polju (*8-b*), gde se kraljica sada nalazi, postavljena je i oznaka `O`.
Svaki potez bi mogao da bude obeležen ovako, radi lakšeg praćena igre. 
Alternativno, može se obeležiti i samo početno polje, umesto svih među-polja.

- Isti niz je iskorišćen i da obeleži da trenutna pozicija predstavlja šah.
Crveni niz tačaka iskorišćen je da ukaže na putanju odakle potiče napad, a suparnički kralj je posebno naznačen oznakom `crosshairs` kako bi se jasno stavilo do znanja da je u pitanju šah-pozicija.

Pored ovoga, popunjen je i niz `removed` figurama koje su izbačene sa table.
Igrač je postavio i poruku na `Šah!`.







