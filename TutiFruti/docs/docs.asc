= *TutiFruti* v1.0 -- Dokumentacija
La Plávusha (Lazar Ljubenović, Marija Đorđević)
:toc:
:toclevels: 3

== O programu

TutiFruti je mala klijentska aplikacija namenjena za prikaz.

Razvijena je za potrebe predmeta Veštačka inteligencija na trećoj i četvrtoj godini osnovnih akademskih studija Elektronskog fakulteta u Nišu.

=== Način rada

Aplikacija služi za razmenu trenutnog stanja table među igračima.
Igrači su predstavljeni Lisp serverima, podignuti na različitim portovima.

Sama aplikacija ne nudi nikakvu logiku za igranje igara, već služi samo kao grafička reprezentacija.

Igrači ne treba da znaju detalje rada aplikacije, već samo da iskoriste objekta opisan u nastavku.

== Struktura objekta

Objekat koji služi za prikaz stanja igre podeljen je u četiri celine (podobjekte), koje sadrže:

- informacije o tipu table na kojoj se igra igra (`board`),
- informacije o igraču (`player`),
- informacije o trenutnom stanju table (`state`) i
- dodatne informacije o obeležavanju pojedinih polja table (`markings`).

=== Grupa `board`

Podobjekat `board` u sebi sadrži osnovne informacije o tipu, veličini i izgledu table. Ovaj objekat u skoro svim igrama ostaje nepromenjen dokom trajanja partije. Sadrži svojstva `type`, `dimensions`, `corner`, `axis`, `coloring` i `mode`.

==== Svojstvo `type`

===== Podržane vrednosti

Stringovi `rectangular`, `hexagonal-flat`, `hexagonal-pointy`.

===== Podrazumevana vrednost

String `rectangular`.

===== Opis

Definiše bazični izgled table i polja na njoj.

- Kada se podesi na `rectangular`, polja su *kvadratnog* oblika, a cela tabla ima oblik pravougaonika. 
- Kada se podesi na `hexagonal-flat`, polja su oblika pravilnih *šestouglova* (kod kojih je sa gornje strane teme), a cela tabla ima oblik šestougla kod kojeg je sa gornje strane stranica.
- Kada se podesi na `hexagonal-pointy`, polja su oblika pravilnih *šestouglova* (kod kojih je sa gornje strane stranica), a cela tabla ima oblik šestougla kod kojeg je sa gornje strane teme.

Utiče na moguće vrednosti svojstava `dimensions`, `corner`, `coloring` i `mode`.

==== Svojstvo `dimensions`

===== Podržane vrednosti

Niz od dva ili tri nenegativna cela broja.

- Ukoliko `type` ima vrednost `rectangular`, `dimensions` mora da ima dva elementa.
- Ukoliko `type` ima vrednost `hexagonal-flat` ili `hexagonal-pointy`, `dimensions` mora da ima tri elementa.

Mada ne postoji tehničko ograničene po pitanju maksimalne dozvoljene veličine, ne preporučuje se unošenje dimenzija preko `20` za niz od dva elemenata, odnosno `10` za niz od tri elemenata.

===== Podrazumevana vrednost

`[8, 8]` ili `[6, 6, 6]`, u zavisnosti od vrednosti svojstva `type`.

===== Opis

Ukoliko `type` ima vrednost `rectangular`:

- Prvi element niza se odnosi na broj vrsta u tabli (drugim rečima, predstavlja njenu visinu izraženu u broju polja).
- Drugi element niza se odnosi na broj kolona u tabeli (drugim rečima, predstavlja njenu dužinu izraženu u broju polja).

Ukoliko `type` ima vrednost `hexagonal-flat`:

- Prvi element niza predstavlja broj polja koji se pružaju duž gornje leve i donje desne ivice table.
- Drugi element niza predstavlja broj polja koji se pružaju duž gornje i donje ivice table.
- Treći element niza predstavlja broj polja koji se pružaju duž gornje desne i donje leve ivice table.

Ukoliko `type` ima vrednost `hexagonal-pointy`:

- Prvi element niza predstavlja broj polja koji se pružaju duž gornje leve i donje desne ivice table.
- Drugi element niza predstavlja broj polja koji se pružaju duž gornje desne i donje leve ivice table.
- Treći element niza predstavlja broj polja koji se pružaju duž leve i desne ivice table.

==== Svojstvo `corner`

*Podržane vrednosti*:
Osnovne vrednosti koje su uvek podržane su `bottom-left`, `top-left`, `top-right` i `bottom-right`.
Ukoliko `type` ima vrednost `rectangular`, podržane vrednosti su samo osnovne vrednosti.
Ukoliko `type` ima vrednost `hexagonal-flat`, pored osnovnih, podržane su i vrednosti `left` i `right`.
Ukoliko `type` ima vrednost `hexagonal-pointy`, pored osnovnih, podržane su i vrednosti `top` i `bottom`.

*Podrazumevana vrednost*: `bottom-left`, nezavisno od vrednosti svojstva `type`.

Daje informaciju o tome iz kog ugla počinje označavanje polja tabele (same oznake se određuju na osnovu svojstva `axis`). TODO slika.

==== Svojstvo `axis`

*Podržane vrednosti*:
Niz od dva stringa.
Stringovi predstavljaju oznake koje će se koristiti pri označavanju polja tabele, pri čemu je svaka oznaka odvojena blanko znakom.
Broj ovih oznaka mora biti u skladu sa dimenzijama datim u `dimensions` i vrstom table datom u `type`.
Ukoliko je `type` podešeno na `hexagonal-flat` ili `hexagonal-pointy`, u obzir se uzima i vrednost svosjtva `corner`.

Kada je `type` podešeno na `rectangular`, broj oznaka prvog stringa mora biti isti kao prva dimenzija, a broj oznaka drugog stringa mora biti isti kao druga dimenzija.

Kada je `type` podešeno na `hexagonal-pointy`, broj oznak prvog stringa mora biti isti kao zbir dveju dimenzija koje se protežu iz tog ugla, pri čemu se prvo gleda smer kazaljke na satu, a zatim smer suprotan kretanu kazaljke na satu. Na primer, ako je svojstvo `corner` podešeno na `bottom-left`, broj oznaka u prvom stringu mora biti jednak `c + a`, a u drugom mora biti jednak`b + a`, pri čemu su `a`, `b` i `c` redom dimenzije date u `dimensions`.

Analogno važi i za slučaj kada je `type` podešeno na `hexagonal-flat`.

*Podrazumevana vrednost*: Nema. Agent prikazuje deskriptivnu grešku ukoliko uslovi nisu ispunjeni i prestaje sa radom (osim u nekim slučajevima; vidi dole).

[NOTE]
====
TutiFruti će prijaviti grešku ukoliko je broj prosleđenih oznaka manji od zahtevanog.
Međutim, ukoliko je on veći, samo će prijaviti upozorenje.
Zato nije neophodno stalno "tempiranje" ovih vrednosti tokom razvitka agenata, već se one mogu jednostavno postaviti na vrednosti koje sigurno ispunjavaju svaku tablu, npr. `1 2 3 4 ... 20` ili `A B C D ... Z`.
====

==== Svojstvo `coloring`

*Podržane vrednosti*: `classic` ili `chess`.

*Podrazumevana vrednost*: `classic`.

Definiše način bojenja polja.
Ukoliko je podešeno na `classic`, polja će dobiti podrazumevanu boju u skladu s temom aplikacije.
Ukoliko je podešeno na `chess`, a `type` na `rectangular`, polja će naizmenično dobiti crnu i belu boju, kao na šahovskoj tabli.
Ukoliko je podešeno na `chess`, a `type` na `hexagonal-flat` ili `hexagonal-pointy`, polja će dobijati crnu, sivu i belu boju, tako da nijedna dva susedna ne budu obojena istom bojom.

==== Svojstvo `mode`

*Podržane vrednosti*: `classic`, ili `circles`. Ako je `type` podešeno na `rectangular`, pruža i mogućnost za `go`.

*Podrazumevana vrednost*: `classic`.

Definiše način prikazivanja polja.

Ukoliko je podešeno na `classic`, a `type` na `rectangular`, polja će biti kvadrati.
Ukoliko je podešeno na `classic`, a `type` na `hexagonal-flat` ili `hexagonal-pointy`, polja će biti šestouglovi (odgovarajuće orijentacije).
U oba slučaja će figure biti postavljane u unutrašnjosti kvadrata, odnosno šestouglova.

Ukoliko je podešeno na `circles`, sva polja će biti krugovi.
Figure se postavljaju u unutrašnjosti ovih krugova.

Vrednost `go` je validna samo ako je tip table podešen na `rectangular`.
U tom slučaju se mreža naizgled smanjuje, i ima po jedno polje manje u obe dimenzije, ali je to zapravo samo privid jer se figure smeštaju na preseke linija koje čine tu mrežu.


=== Grupa `player`

`player` je objekat koji sadrži tri svojstva: `name` (opciono), `order` i `message` (opciono).

==== Svojstvo `name`

*Podržane vrednosti*: String enkodovan koristeći UTF-8. Ne preporučuju se vrednosti preko 20 karaktera.

*Podrazumevana vrednost*: `Igrač 1` ili `Igrač 2`, u zavinosti od vrednosti svojstva `order`.

Koristi se da bi se prikazalo ime igrača, tima ili agenta koji stoji iza poteza.

==== Svojstvo `order`

*Podržane vrednosti*: `1` ili `2`.

*Podrazumevana vrednost*: Nema. Program prijavljuje grešku ukoliko dobije objekat koji sadrži nevalidnu vrednost ovog polja.

Koristi se da bi se identifikovao igrač koji šalje prikaz stanja table.

==== Svojstvo `message`

*Podržane vrednosti*: String enkodovan koristeći UTF-8.

*Podrzaumevana vrednost*: Prazan string.

Može se koristiti za bilo koju svrhu.
Služi za komunikaciju između mašine i čoveka.
Može sadržati neke informacije od koristi za debagiranje (npr. odigrani potez), ili šaljive poruke.

=== Grupa `state`

`state` je niz objekata kojima se određuju koje se figure trenutno nalaze na tabli, kao i njihove pozicije.
Figure su određene oblikom (`shape`) i bojom (`color`).

Svaki od elemenata niza mora biti objekat sa ključevima `style` i `fields`.

`style` je objekat koji se sastoji od ključeva `color` i `shape`.
`color` je string koji određuje *boju* kojom figura treba da bude obojena.
Podržane su sledeće vrednosti: `red`, `pink`, `purple`, `deep-purple`, `indigo`, `blue`, `light-blue`, `cyan`, `teal`, `green`, `light-green`, `lime`, `yellow`, `amber`, `orange`, `deep-orange`, `brown`, `grey`, `blue-grey`, `black` i `white`.
`shape` je string koji određuje *oblik* kojim figura terba da bude predstavljena.
Podržane su sledeće vrednosti: `O`, `X`, `circle`, `square`, `star` i skup vrednosti za igranje šaha: `chess-king-white`, `chess-king-black`, `chess-queen-white`, `chess-queen-black`, `chess-rock-white`, `chess-rock-black`, `chess-bishop-white`, `chess-bishop-black`, `chess-knight-white`, `chess-knight-black`, `chess-pawn-white`, `chess-pawn-white`.
Treba imati u vidu da nastavci `-black` i `-white` ne određuju boju figure, već samo stil prikaza (šuplji ili ispunjen).

`fields` je niz gde svaki element predstavlja koordinate na koje se postavlja figura, čiji su boja i oblik definisani u `style`.
Svaki element ovog niza je novi niz od dva elemenata, gde elementi čine koordinate.
Ove koordiante imaju drugačije značenje u zavisnosti od tipa table (`board.type`).

TODO slike

[NOTE]
====
Koordinate koje TutiFruti interno koristi za prikazivanje nisu iste kao koordinate podešene pomoću `board.axis`.
`board.axis` služi samo za vizuelni prikaz, dok se programski koordinate uvek kodiraju na isti način, opisan slikama.
====

=== Grupa `markings`

`markings` je niz sličan nizu `state`. 
Služi za obeležavanje nekih polja za posebne namene (npr. poslednje odigrani potez, mogući potezi, itd).

Prikazuju se izbledelom bojom iznad poljā koje je specificirano u `fields`.

[NOTE]
====
Mada TutiFruti to ne brani, savetuje se korišćenje jednostavnih oblika kao što su `circle`, `O` i `square`, kao i izbegavanje korišćenja istih oblika i boja za figure i za oznake, kako bi se izbegla eventualna konfuzija oko toga šta su figure a šta oznake.
====

















